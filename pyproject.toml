[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.poetry]
name = "perceiver-io"
version = "0.11.0"
description = "Perceiver IO"
readme = "README.md"
authors = [
    "Martin Krasser <krasserm@googlemail.com>",
    "Christoph Stumpf <stumpf.christoph@gmail.com>",
]
license = "Apache-2.0"
keywords= ["perceiver-io", "perceiver-ar", "deep-learning"]
classifiers = [
    "Environment :: Console",
    "Natural Language :: English",
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "Topic :: Scientific/Engineering",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
    "License :: OSI Approved :: Apache Software License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
]
homepage = "https://github.com/krasserm/perceiver-io"
packages = [
    { include = "perceiver" },
]
include = ["docs"]

[tool.poetry.dependencies]
python = "^3.8,<3.11"
pytorch-lightning = "^2.0"
torch = "^2.0"
fairscale = "^0.4"
torchmetrics = "^0.9"
torch-optimizer = "^0.3"
tensorboard = "^2.11"
einops = "^0.4"
cchardet = "^2.1"
datasets = {version = "^2.4", optional = true}
tokenizers = {version = "^0.12", optional = true}
transformers = {version = "^4.28", optional = true}
torchvision = {version = "^0.15", optional = true}
opencv-python = {version = "^4.6.0.66", optional = true}
jsonargparse = {extras = ["signatures"], version = "^4.18"}
fsspec = {extras = ["s3"], version = "*"}
pretty_midi = {version = "^0.2.10", optional = true}

[tool.poetry.group.dev.dependencies]
invoke = "^1.6.0"
pre-commit = "^2.17.0"
pytest = "^7.0.1"
pytest-cov = "^3.0.0"
flaky = "^3.7.0"

[tool.poetry.group.examples]
optional = true

[tool.poetry.group.examples.dependencies]
scipy = "^1.10"
pandas = "^1.1"
notebook = "*"
matplotlib = "*"
ipywidgets = "*"
termcolor = "2.0.1"

[tool.poetry.extras]
text = ["datasets", "tokenizers", "transformers"]
vision = ["datasets", "torchvision", "opencv-python"]
audio = ["datasets", "pretty_midi", "transformers"]

[tool.black]
line-length = 120
exclude = "(.eggs|.git|.hg|.mypy_cache|.venv|_build|buck-out|build|dist)"

[tool.isort]
known_first_party = [
    "perceiver",
]
skip_glob = []
profile = "black"
line_length = 120

[tool.pytest.ini_options]

[tool.coverage.run]
source = ["perceiver"]


[tool.ruff]
line-length = 120
# Enable Pyflakes `E` and `F` codes by default.
select = [
    "E", "W",  # see: https://pypi.org/project/pycodestyle
    "F",  # see: https://pypi.org/project/pyflakes
]
#extend-select = [
#    "C4",  # see: https://pypi.org/project/flake8-comprehensions
#    "SIM",  # see: https://pypi.org/project/flake8-simplify
#    "RET",  # see: https://pypi.org/project/flake8-return
#    "PT",  # see: https://pypi.org/project/flake8-pytest-style
#]
ignore = [
    "E731",  # Do not assign a lambda expression, use a def
]
# Exclude a variety of commonly ignored directories.
exclude = [
    ".git",
    "docs",
]
ignore-init-module-imports = true

[tool.ruff.per-file-ignores]
"perceiver/**/__init__.py" = ["F401", "F403"]

[tool.ruff.mccabe]
# Unlike Flake8, default to a complexity level of 10.
max-complexity = 10
